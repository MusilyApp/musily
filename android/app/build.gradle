plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace = 'app.musily.music'
    compileSdk = flutter.compileSdkVersion
    ndkVersion = '27.0.12077973'
    flavorDimensions 'default'

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId = 'app.musily.music'
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildFeatures {
        buildConfig = true
    }

    signingConfigs {
        stable {
            storeFile = file(keystoreProperties['stableStoreFile'])
            storePassword = keystoreProperties['stableStorePassword']
            keyAlias = keystoreProperties['stableKeyAlias']
            keyPassword = keystoreProperties['stableKeyPassword']
        }
    }

    buildTypes {
        release {
            shrinkResources = false
            signingConfig signingConfigs.stable
        }
        debug {}
    }

    productFlavors {
        dev {
            dimension 'default'
            resValue 'string', 'app_name', 'Musily Dev'
            applicationId 'app.musily.music.dev'
            applicationIdSuffix '.dev'
            manifestPlaceholders = [
                appIcon: '@mipmap/launcher_icon_dev',
            ]
        }
        stable {
            dimension 'default'
            resValue 'string', 'app_name', 'Musily'
            manifestPlaceholders = [
                appIcon: '@mipmap/launcher_icon',
            ]
            signingConfig signingConfigs.stable
        }
    }
}

flutter {
    source = '../..'
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            android {
                compileSdkVersion 35

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }
            }
        }
        
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions {
                jvmTarget = JavaVersion.VERSION_17.toString()
            }
        }

        if (project.plugins.hasPlugin('com.android.library')) {
            android {
                defaultConfig {
                    def androidManifest = android.sourceSets.main.manifest.srcFile
                    if (androidManifest.exists()) {
                        def parsedManifest = new XmlParser().parse(androidManifest)
                        def packageName = parsedManifest.attribute('package')

                        if (packageName == null) {
                            namespace = "app.musily.music"
                        }

                        if (namespace == null) {
                            namespace project.group
                        }
                    }
                }
            }
        }
    }
    project.evaluationDependsOn(':app')
}
